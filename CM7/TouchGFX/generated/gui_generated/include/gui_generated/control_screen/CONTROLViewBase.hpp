/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CONTROLVIEWBASE_HPP
#define CONTROLVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/control_screen/CONTROLPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <gui/containers/LoRA_PopUp.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>

class CONTROLViewBase : public touchgfx::View<CONTROLPresenter>
{
public:
    CONTROLViewBase();
    virtual ~CONTROLViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();
    virtual void transitionBegins();

    /*
     * Virtual Action Handlers
     */
    virtual void TransitionEnd_Control()
    {
        // Override and implement this function in CONTROL
    }
    virtual void TransitionBegin_Control()
    {
        // Override and implement this function in CONTROL
    }
    virtual void LORA_Begin()
    {
        // Override and implement this function in CONTROL
    }
    virtual void LORA_End()
    {
        // Override and implement this function in CONTROL
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box BACKGROUND;
    touchgfx::FadeAnimator< touchgfx::Image > INFO_Torque;
    touchgfx::FadeAnimator< touchgfx::Image > INFO_Giros_xz;
    touchgfx::FadeAnimator< touchgfx::Image > INFO_Acel_xy;
    touchgfx::FadeAnimator< touchgfx::ButtonWithIcon > INFO_Frenagem;
    touchgfx::FadeAnimator< touchgfx::ButtonWithIcon > INFO_Modo;
    touchgfx::FadeAnimator< touchgfx::ButtonWithIcon > INFO_LoRa;
    touchgfx::FadeAnimator< touchgfx::Image > MOTOR_background;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_L_icon;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_L_giros;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_L_potencia;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_L_torque;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_L_temperatura;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_R_icon;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_R_giros;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_R_potencia;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_R_torque;
    touchgfx::FadeAnimator< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  > MOTOR_R_temperatura;
    touchgfx::FadeAnimator< touchgfx::Gauge > INCLINACAO_VOL_gauge;
    touchgfx::FadeAnimator< touchgfx::Gauge > INCLINACAO_CAR_gauge;
    touchgfx::FadeAnimator< touchgfx::TextArea > torque;
    touchgfx::FadeAnimator< touchgfx::TextArea > giroscopio_xz;
    touchgfx::FadeAnimator< touchgfx::TextArea > acelerometro_xy;
    touchgfx::FadeAnimator< touchgfx::TextArea > motor_L_Giros;
    touchgfx::FadeAnimator< touchgfx::TextArea > motor_R_Giros;
    touchgfx::FadeAnimator< touchgfx::TextArea > motor_L_Potencia;
    touchgfx::FadeAnimator< touchgfx::TextArea > motor_R_Potencia;
    touchgfx::FadeAnimator< touchgfx::TextArea > motor_L_Torque;
    touchgfx::FadeAnimator< touchgfx::TextArea > motor_R_Torque;
    touchgfx::FadeAnimator< touchgfx::TextArea > motor_L_Temperature;
    touchgfx::FadeAnimator< touchgfx::TextArea > motor_R_Temperature;
    touchgfx::FadeAnimator< touchgfx::Button > POP_Up;
    touchgfx::FadeAnimator< touchgfx::ButtonWithIcon > DEBUG_page;
    touchgfx::FadeAnimator< touchgfx::ButtonWithIcon > SAFETY_page;
    touchgfx::FadeAnimator< touchgfx::ButtonWithIcon > CONTROL_page;
    touchgfx::FadeAnimator< touchgfx::ButtonWithIcon > DRIVE_page;
    touchgfx::FadeAnimator< touchgfx::Box > FRONTGROUND;
    touchgfx::MoveAnimator< LoRA_PopUp > LORA_PopUp;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  BOTTON_lora;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CONTROLViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<CONTROLViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Delay Variable Declarations
     */
    static const uint16_t INTERACTION_DELAY_DRIVE_PAGE_PRESS_DURATION = 15;
    uint16_t interaction_Delay_DRIVE_page_pressCounter;
    static const uint16_t INTERACTION_DELAY_SAFETY_PAGE_DURATION = 15;
    uint16_t interaction_Delay_SAFETY_pageCounter;
    static const uint16_t INTERACTION_DELAY_DEBUG_PAGE_DURATION = 15;
    uint16_t interaction_Delay_DEBUG_pageCounter;

};

#endif // CONTROLVIEWBASE_HPP
