/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/debug_screen/DEBUGViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

DEBUGViewBase::DEBUGViewBase() :
    buttonCallback(this, &DEBUGViewBase::buttonCallbackHandler),
    interaction_Delay_DRIVER_pageCounter(0),
    interaction_Delay_CONTROL_pageCounter(0),
    interaction_Delay_SAFETY_pageCounter(0)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BACKGROUND.setPosition(0, 0, 480, 272);
    BACKGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(BACKGROUND);

    POP_Up.setXY(274, 232);
    POP_Up.setBitmaps(touchgfx::Bitmap(BITMAP_POP_TESLA_ID), touchgfx::Bitmap(BITMAP_ALERTA_INV_9_ID));
    add(POP_Up);

    INFO_LoRa.setXY(415, 0);
    INFO_LoRa.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_LORA_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_LORA_ON_ID), touchgfx::Bitmap(BITMAP_LORA_OFF_ID));
    INFO_LoRa.setIconXY(14, 1);
    add(INFO_LoRa);

    INFO_Frenagem.setXY(416, 75);
    INFO_Frenagem.setBitmaps(touchgfx::Bitmap(BITMAP_TELEMETRY_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_TELEMETRY_TAB_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_OFF_ID));
    INFO_Frenagem.setIconXY(11, 2);
    add(INFO_Frenagem);

    INFO_Frenagem_1.setXY(415, 37);
    INFO_Frenagem_1.setBitmaps(touchgfx::Bitmap(BITMAP_DATALOG_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_DATALOG_TAB_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_OFF_ID));
    INFO_Frenagem_1.setIconXY(11, 2);
    add(INFO_Frenagem_1);

    INFO_Frenagem_2.setXY(414, 114);
    INFO_Frenagem_2.setBitmaps(touchgfx::Bitmap(BITMAP_ECU_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_ECU_TAB_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_OFF_ID));
    INFO_Frenagem_2.setIconXY(11, 2);
    add(INFO_Frenagem_2);

    INFO_Frenagem_3.setXY(415, 153);
    INFO_Frenagem_3.setBitmaps(touchgfx::Bitmap(BITMAP_BMS_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_BMS_TAB_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_OFF_ID));
    INFO_Frenagem_3.setIconXY(11, 2);
    add(INFO_Frenagem_3);

    INFO_Frenagem_4.setXY(418, 189);
    INFO_Frenagem_4.setBitmaps(touchgfx::Bitmap(BITMAP_BEACON_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_BEACON_TAB_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_OFF_ID));
    INFO_Frenagem_4.setIconXY(11, 2);
    add(INFO_Frenagem_4);

    DEBUG_page.setXY(0, 203);
    DEBUG_page.setBitmaps(touchgfx::Bitmap(BITMAP_BOTTOM_ON_SELECT_ID), touchgfx::Bitmap(BITMAP_BOTTOM_OFF_SELECT_ID), touchgfx::Bitmap(BITMAP_DEBUG_ON_ID), touchgfx::Bitmap(BITMAP_DEBUG_OFF_ID));
    DEBUG_page.setIconXY(0, 13);
    add(DEBUG_page);

    SAFETY_page.setXY(0, 134);
    SAFETY_page.setBitmaps(touchgfx::Bitmap(BITMAP_MID_BOTTOM_OFF_UNSELECT_ID), touchgfx::Bitmap(BITMAP_MID_BOTTOM_ON_UNSELECT_ID), touchgfx::Bitmap(BITMAP_SAFETY_OFF_ID), touchgfx::Bitmap(BITMAP_SAFETY_ON_ID));
    SAFETY_page.setIconXY(0, 13);
    SAFETY_page.setAction(buttonCallback);
    add(SAFETY_page);

    CONTROL_page.setXY(0, 67);
    CONTROL_page.setBitmaps(touchgfx::Bitmap(BITMAP_MID_TOP_OFF_UNSELECT_ID), touchgfx::Bitmap(BITMAP_MID_TOP_ON_UNSELECT_ID), touchgfx::Bitmap(BITMAP_CONTROL_OFF_ID), touchgfx::Bitmap(BITMAP_CONTROL_ON_ID));
    CONTROL_page.setIconXY(0, 13);
    CONTROL_page.setAction(buttonCallback);
    add(CONTROL_page);

    DRIVE_page.setXY(0, 0);
    DRIVE_page.setBitmaps(touchgfx::Bitmap(BITMAP_TOP_OFF_UNSELECT_ID), touchgfx::Bitmap(BITMAP_TOP_ON_UNSELECT_ID), touchgfx::Bitmap(BITMAP_DRIVE_OFF_ID), touchgfx::Bitmap(BITMAP_DRIVE_ON_ID));
    DRIVE_page.setIconXY(0, 13);
    DRIVE_page.setAction(buttonCallback);
    add(DRIVE_page);

    image1.setXY(65, 28);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DEBUG_SICATD_BACKGROUND_ID));
    add(image1);

    image1_1.setXY(65, 86);
    image1_1.setBitmap(touchgfx::Bitmap(BITMAP_DEBUG_ECU_BACKGROUND_ID));
    add(image1_1);

    image1_2.setXY(65, 144);
    image1_2.setBitmap(touchgfx::Bitmap(BITMAP_DEBUG_BMS_BACKGROUND_ID));
    add(image1_2);

    tensao_max.setPosition(205, 57, 47, 15);
    tensao_max.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max.setLinespacing(0);
    tensao_max.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XQF6));
    add(tensao_max);

    tensao_max_5.setPosition(147, 49, 47, 32);
    tensao_max_5.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_5.setLinespacing(-2);
    tensao_max_5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T2YW));
    add(tensao_max_5);

    tensao_max_5_1.setPosition(147, 107, 47, 32);
    tensao_max_5_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_5_1.setLinespacing(-2);
    tensao_max_5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AMAG));
    add(tensao_max_5_1);

    tensao_max_5_2.setPosition(147, 164, 47, 32);
    tensao_max_5_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_5_2.setLinespacing(-2);
    tensao_max_5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8ZPX));
    add(tensao_max_5_2);

    tensao_max_1.setPosition(262, 57, 47, 15);
    tensao_max_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_1.setLinespacing(0);
    tensao_max_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CQEM));
    add(tensao_max_1);

    tensao_max_2.setPosition(317, 57, 47, 15);
    tensao_max_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_2.setLinespacing(0);
    tensao_max_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PKT0));
    add(tensao_max_2);

    tensao_max_2_1.setPosition(317, 114, 47, 15);
    tensao_max_2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_2_1.setLinespacing(0);
    tensao_max_2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UAN7));
    add(tensao_max_2_1);

    tensao_max_1_1.setPosition(262, 114, 47, 15);
    tensao_max_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_1_1.setLinespacing(0);
    tensao_max_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L63Y));
    add(tensao_max_1_1);

    tensao_max_3.setPosition(205, 114, 47, 15);
    tensao_max_3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_3.setLinespacing(0);
    tensao_max_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ASDO));
    add(tensao_max_3);

    tensao_max_2_2.setPosition(317, 173, 47, 15);
    tensao_max_2_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_2_2.setLinespacing(0);
    tensao_max_2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_228G));
    add(tensao_max_2_2);

    tensao_max_1_2.setPosition(262, 173, 47, 15);
    tensao_max_1_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_1_2.setLinespacing(0);
    tensao_max_1_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KANZ));
    add(tensao_max_1_2);

    tensao_max_4.setPosition(205, 173, 47, 15);
    tensao_max_4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    tensao_max_4.setLinespacing(0);
    tensao_max_4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YXOY));
    add(tensao_max_4);

    FRONTGROUND.setPosition(80, 0, 400, 272);
    FRONTGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    FRONTGROUND.setAlpha(0);
    add(FRONTGROUND);
}

DEBUGViewBase::~DEBUGViewBase()
{

}

void DEBUGViewBase::setupScreen()
{
    transitionBegins();
}

void DEBUGViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &DRIVE_page)
    {
        //Interaction_DRIVER_page_press
        //When DRIVE_page clicked call virtual function
        //Call TransitionEnd_Debug
        TransitionEnd_Debug();
    
        //Interaction_Delay_DRIVER_page
        //When Interaction_DRIVER_page_press completed delay
        //Delay for 251 ms (15 Ticks)
        interaction_Delay_DRIVER_pageCounter = INTERACTION_DELAY_DRIVER_PAGE_DURATION;
    }
    if (&src == &CONTROL_page)
    {
        //Interaction_CONTROL_page_press
        //When CONTROL_page clicked call virtual function
        //Call TransitionEnd_Debug
        TransitionEnd_Debug();
    
        //Interaction_Delay_CONTROL_page
        //When Interaction_CONTROL_page_press completed delay
        //Delay for 251 ms (15 Ticks)
        interaction_Delay_CONTROL_pageCounter = INTERACTION_DELAY_CONTROL_PAGE_DURATION;
    }
    if (&src == &SAFETY_page)
    {
        //Interaction_SAFETY_page_press
        //When SAFETY_page clicked call virtual function
        //Call TransitionEnd_Debug
        TransitionEnd_Debug();
    
        //Interaction_Delay_SAFETY_page
        //When Interaction_SAFETY_page_press completed delay
        //Delay for 251 ms (15 Ticks)
        interaction_Delay_SAFETY_pageCounter = INTERACTION_DELAY_SAFETY_PAGE_DURATION;
    }
}

void DEBUGViewBase::handleTickEvent()
{
    if (interaction_Delay_DRIVER_pageCounter > 0)
    {
        interaction_Delay_DRIVER_pageCounter--;
        if (interaction_Delay_DRIVER_pageCounter == 0)
        {
                //Interaction_Screen_DRIVER_page
                //When Interaction_Delay_DRIVER_page completed change screen to DRIVER
                //Go to DRIVER with no screen transition
                application().gotoDRIVERScreenNoTransition();
        }
    }

    if (interaction_Delay_CONTROL_pageCounter > 0)
    {
        interaction_Delay_CONTROL_pageCounter--;
        if (interaction_Delay_CONTROL_pageCounter == 0)
        {
                //Interaction_Screen_CONTROL_page
                //When Interaction_Delay_CONTROL_page completed change screen to CONTROL
                //Go to CONTROL with no screen transition
                application().gotoCONTROLScreenNoTransition();
        }
    }

    if (interaction_Delay_SAFETY_pageCounter > 0)
    {
        interaction_Delay_SAFETY_pageCounter--;
        if (interaction_Delay_SAFETY_pageCounter == 0)
        {
                //Interaction_Screen_SAFETY_page
                //When Interaction_Delay_SAFETY_page completed change screen to SAFETY
                //Go to SAFETY with no screen transition
                application().gotoSAFETYScreenNoTransition();
        }
    }
}

void DEBUGViewBase::transitionBegins()
{
    //Interaction1
    //When screen transition begins call virtual function
    //Call TransitionBegin_Debug
    TransitionBegin_Debug();
}
