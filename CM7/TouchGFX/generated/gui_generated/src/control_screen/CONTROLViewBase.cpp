/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/control_screen/CONTROLViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

CONTROLViewBase::CONTROLViewBase() :
    buttonCallback(this, &CONTROLViewBase::buttonCallbackHandler),
    interaction_Delay_DRIVE_page_pressCounter(0),
    interaction_Delay_SAFETY_pageCounter(0),
    interaction_Delay_DEBUG_pageCounter(0)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BACKGROUND.setPosition(0, 0, 480, 272);
    BACKGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(BACKGROUND);

    INFO_Torque.setXY(416, 190);
    INFO_Torque.setBitmap(touchgfx::Bitmap(BITMAP_TORQUE_DOWM_TAB_OFF_ID));
    add(INFO_Torque);

    INFO_Giros_xz.setXY(416, 153);
    INFO_Giros_xz.setBitmap(touchgfx::Bitmap(BITMAP_GIROS_XZ_TAB_OFF_ID));
    add(INFO_Giros_xz);

    INFO_Acel_xy.setXY(415, 114);
    INFO_Acel_xy.setBitmap(touchgfx::Bitmap(BITMAP_ACELL_XY_TAB_OFF_ID));
    add(INFO_Acel_xy);

    INFO_Frenagem.setXY(414, 75);
    INFO_Frenagem.setBitmaps(touchgfx::Bitmap(BITMAP_FRENAGEM_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_TAB_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_ON_ID), touchgfx::Bitmap(BITMAP_FRENAGEM_OFF_ID));
    INFO_Frenagem.setIconXY(11, 2);
    add(INFO_Frenagem);

    INFO_Modo.setXY(415, 37);
    INFO_Modo.setBitmaps(touchgfx::Bitmap(BITMAP_MODO_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_MODO_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_SKIDPAD_SIMBOL_ID), touchgfx::Bitmap(BITMAP_ENDURO_SIMBOL_ID));
    INFO_Modo.setIconXY(12, 3);
    add(INFO_Modo);

    INFO_LoRa.setXY(415, 0);
    INFO_LoRa.setBitmaps(touchgfx::Bitmap(BITMAP_LORA_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_LORA_TAB_OFF_ID), touchgfx::Bitmap(BITMAP_LORA_ON_ID), touchgfx::Bitmap(BITMAP_LORA_OFF_ID));
    INFO_LoRa.setIconXY(14, 1);
    add(INFO_LoRa);

    MOTOR_background.setXY(103, 23);
    MOTOR_background.setBitmap(touchgfx::Bitmap(BITMAP_MOTOR_BACKGROUND_WIDGET_ID));
    add(MOTOR_background);

    MOTOR_L_icon.setBitmaps(Bitmap(BITMAP_MOTOR_L_ICON_ID), Bitmap(BITMAP_MOTOR_L_ICON_ID));
    MOTOR_L_icon.setBitmapXY(0, 0);
    MOTOR_L_icon.setPosition(95, 188, 67, 68);
    add(MOTOR_L_icon);

    MOTOR_L_giros.setBitmaps(Bitmap(BITMAP_MOTOR_GIROS_ICON_ID), Bitmap(BITMAP_MOTOR_GIROS_ICON_ID));
    MOTOR_L_giros.setBitmapXY(0, -14);
    MOTOR_L_giros.setPosition(90, 150, 73, 38);
    add(MOTOR_L_giros);

    MOTOR_L_potencia.setBitmaps(Bitmap(BITMAP_MOTOR_POT_INST_ICON_ID), Bitmap(BITMAP_MOTOR_POT_INST_ICON_ID));
    MOTOR_L_potencia.setBitmapXY(0, -14);
    MOTOR_L_potencia.setPosition(87, 112, 73, 38);
    add(MOTOR_L_potencia);

    MOTOR_L_torque.setBitmaps(Bitmap(BITMAP_MOTOR_TORQUE_INST_ICON_ID), Bitmap(BITMAP_MOTOR_TORQUE_INST_ICON_ID));
    MOTOR_L_torque.setBitmapXY(0, -14);
    MOTOR_L_torque.setPosition(89, 74, 73, 38);
    add(MOTOR_L_torque);

    MOTOR_L_temperatura.setBitmaps(Bitmap(BITMAP_MOTOR_TEMP_ICON_ID), Bitmap(BITMAP_MOTOR_TEMP_ICON_ID));
    MOTOR_L_temperatura.setBitmapXY(0, -14);
    MOTOR_L_temperatura.setPosition(89, 35, 73, 38);
    add(MOTOR_L_temperatura);

    MOTOR_R_icon.setBitmaps(Bitmap(BITMAP_MOTOR_R_ICON_ID), Bitmap(BITMAP_MOTOR_L_ICON_ID));
    MOTOR_R_icon.setBitmapXY(0, 0);
    MOTOR_R_icon.setPosition(168, 188, 67, 68);
    add(MOTOR_R_icon);

    MOTOR_R_giros.setBitmaps(Bitmap(BITMAP_MOTOR_GIROS_ICON_ID), Bitmap(BITMAP_MOTOR_GIROS_ICON_ID));
    MOTOR_R_giros.setBitmapXY(0, -14);
    MOTOR_R_giros.setPosition(170, 150, 73, 38);
    add(MOTOR_R_giros);

    MOTOR_R_potencia.setBitmaps(Bitmap(BITMAP_MOTOR_POT_INST_ICON_ID), Bitmap(BITMAP_MOTOR_POT_INST_ICON_ID));
    MOTOR_R_potencia.setBitmapXY(0, -14);
    MOTOR_R_potencia.setPosition(169, 112, 73, 38);
    add(MOTOR_R_potencia);

    MOTOR_R_torque.setBitmaps(Bitmap(BITMAP_MOTOR_TORQUE_INST_ICON_ID), Bitmap(BITMAP_MOTOR_TORQUE_INST_ICON_ID));
    MOTOR_R_torque.setBitmapXY(0, -14);
    MOTOR_R_torque.setPosition(170, 74, 73, 38);
    add(MOTOR_R_torque);

    MOTOR_R_temperatura.setBitmaps(Bitmap(BITMAP_MOTOR_TEMP_ICON_ID), Bitmap(BITMAP_MOTOR_TEMP_ICON_ID));
    MOTOR_R_temperatura.setBitmapXY(0, -14);
    MOTOR_R_temperatura.setPosition(169, 35, 73, 38);
    add(MOTOR_R_temperatura);

    INCLINACAO_VOL_gauge.setBackground(touchgfx::Bitmap(BITMAP_BACKGROUND_GAUGE_ID));
    INCLINACAO_VOL_gauge.setPosition(267, 7, 122, 122);
    INCLINACAO_VOL_gauge.setCenter(61, 61);
    INCLINACAO_VOL_gauge.setStartEndAngle(-143.1f, 138.4f);
    INCLINACAO_VOL_gauge.setRange(-150, 150);
    INCLINACAO_VOL_gauge.setValue(0);
    INCLINACAO_VOL_gauge.setNeedle(BITMAP_VOLANTE_ICON_ID, 28, 28);
    INCLINACAO_VOL_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    INCLINACAO_VOL_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(INCLINACAO_VOL_gauge);

    INCLINACAO_CAR_gauge.setBackground(touchgfx::Bitmap(BITMAP_BACKGROUND_GAUGE_ID));
    INCLINACAO_CAR_gauge.setPosition(267, 111, 122, 122);
    INCLINACAO_CAR_gauge.setCenter(61, 61);
    INCLINACAO_CAR_gauge.setStartEndAngle(-143.1f, 138.4f);
    INCLINACAO_CAR_gauge.setRange(-150, 150);
    INCLINACAO_CAR_gauge.setValue(0);
    INCLINACAO_CAR_gauge.setEasingEquation(touchgfx::EasingEquations::sineEaseIn);
    INCLINACAO_CAR_gauge.setNeedle(BITMAP_CAR_ICON_ID, 28, 28);
    INCLINACAO_CAR_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    INCLINACAO_CAR_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    add(INCLINACAO_CAR_gauge);

    torque.setXY(436, 207);
    torque.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    torque.setLinespacing(0);
    torque.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1RT6));
    add(torque);

    giroscopio_xz.setPosition(429, 168, 40, 15);
    giroscopio_xz.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    giroscopio_xz.setLinespacing(0);
    giroscopio_xz.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UYYY));
    add(giroscopio_xz);

    acelerometro_xy.setPosition(423, 130, 53, 15);
    acelerometro_xy.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    acelerometro_xy.setLinespacing(0);
    acelerometro_xy.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WNF9));
    add(acelerometro_xy);

    motor_L_Giros.setPosition(177, 164, 57, 19);
    motor_L_Giros.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    motor_L_Giros.setLinespacing(0);
    motor_L_Giros.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B63V));
    add(motor_L_Giros);

    motor_R_Giros.setPosition(95, 163, 57, 19);
    motor_R_Giros.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    motor_R_Giros.setLinespacing(0);
    motor_R_Giros.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VEMN));
    add(motor_R_Giros);

    motor_L_Potencia.setPosition(177, 125, 57, 19);
    motor_L_Potencia.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    motor_L_Potencia.setLinespacing(0);
    motor_L_Potencia.setTypedText(touchgfx::TypedText(T___SINGLEUSE_73T9));
    add(motor_L_Potencia);

    motor_R_Potencia.setPosition(95, 124, 57, 19);
    motor_R_Potencia.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    motor_R_Potencia.setLinespacing(0);
    motor_R_Potencia.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05D5));
    add(motor_R_Potencia);

    motor_L_Torque.setPosition(177, 88, 57, 19);
    motor_L_Torque.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    motor_L_Torque.setLinespacing(0);
    motor_L_Torque.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OGBX));
    add(motor_L_Torque);

    motor_R_Torque.setPosition(95, 87, 57, 19);
    motor_R_Torque.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    motor_R_Torque.setLinespacing(0);
    motor_R_Torque.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VOXZ));
    add(motor_R_Torque);

    motor_L_Temperature.setPosition(177, 49, 57, 19);
    motor_L_Temperature.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    motor_L_Temperature.setLinespacing(0);
    motor_L_Temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z5XJ));
    add(motor_L_Temperature);

    motor_R_Temperature.setPosition(95, 48, 57, 19);
    motor_R_Temperature.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    motor_R_Temperature.setLinespacing(0);
    motor_R_Temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2G9Q));
    add(motor_R_Temperature);

    POP_Up.setXY(274, 232);
    POP_Up.setBitmaps(touchgfx::Bitmap(BITMAP_POP_TESLA_ID), touchgfx::Bitmap(BITMAP_ALERTA_INV_9_ID));
    add(POP_Up);

    DEBUG_page.setXY(0, 203);
    DEBUG_page.setBitmaps(touchgfx::Bitmap(BITMAP_BOTTOM_OFF_UNSELECT_ID), touchgfx::Bitmap(BITMAP_BOTTOM_ON_UNSELECT_ID), touchgfx::Bitmap(BITMAP_DEBUG_OFF_ID), touchgfx::Bitmap(BITMAP_DEBUG_ON_ID));
    DEBUG_page.setIconXY(0, 13);
    DEBUG_page.setAction(buttonCallback);
    add(DEBUG_page);

    SAFETY_page.setXY(0, 134);
    SAFETY_page.setBitmaps(touchgfx::Bitmap(BITMAP_MID_BOTTOM_OFF_UNSELECT_ID), touchgfx::Bitmap(BITMAP_MID_BOTTOM_ON_UNSELECT_ID), touchgfx::Bitmap(BITMAP_SAFETY_OFF_ID), touchgfx::Bitmap(BITMAP_SAFETY_ON_ID));
    SAFETY_page.setIconXY(0, 13);
    SAFETY_page.setAction(buttonCallback);
    add(SAFETY_page);

    CONTROL_page.setXY(0, 67);
    CONTROL_page.setBitmaps(touchgfx::Bitmap(BITMAP_MID_TOP_ON_SELECT_ID), touchgfx::Bitmap(BITMAP_MID_TOP_OFF_SELECT_ID), touchgfx::Bitmap(BITMAP_CONTROL_ON_ID), touchgfx::Bitmap(BITMAP_CONTROL_OFF_ID));
    CONTROL_page.setIconXY(0, 13);
    add(CONTROL_page);

    DRIVE_page.setXY(0, 0);
    DRIVE_page.setBitmaps(touchgfx::Bitmap(BITMAP_TOP_OFF_UNSELECT_ID), touchgfx::Bitmap(BITMAP_TOP_ON_UNSELECT_ID), touchgfx::Bitmap(BITMAP_DRIVE_OFF_ID), touchgfx::Bitmap(BITMAP_DRIVE_ON_ID));
    DRIVE_page.setIconXY(0, 13);
    DRIVE_page.setAction(buttonCallback);
    add(DRIVE_page);

    FRONTGROUND.setPosition(80, 0, 400, 272);
    FRONTGROUND.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    FRONTGROUND.setAlpha(0);
    add(FRONTGROUND);
}

CONTROLViewBase::~CONTROLViewBase()
{

}

void CONTROLViewBase::setupScreen()
{
    transitionBegins();
}

void CONTROLViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &DRIVE_page)
    {
        //Interaction_DRIVE_page_press
        //When DRIVE_page clicked call virtual function
        //Call TransitionEnd_Control
        TransitionEnd_Control();
    
        //Interaction_Delay_DRIVE_page_press
        //When Interaction_DRIVE_page_press completed delay
        //Delay for 251 ms (15 Ticks)
        interaction_Delay_DRIVE_page_pressCounter = INTERACTION_DELAY_DRIVE_PAGE_PRESS_DURATION;
    }
    if (&src == &SAFETY_page)
    {
        //Interaction_SAFETY_page_press
        //When SAFETY_page clicked call virtual function
        //Call TransitionEnd_Control
        TransitionEnd_Control();
    
        //Interaction_Delay_SAFETY_page
        //When Interaction_SAFETY_page_press completed delay
        //Delay for 251 ms (15 Ticks)
        interaction_Delay_SAFETY_pageCounter = INTERACTION_DELAY_SAFETY_PAGE_DURATION;
    }
    if (&src == &DEBUG_page)
    {
        //Interaction_DEBUG_page_press
        //When DEBUG_page clicked call virtual function
        //Call TransitionEnd_Control
        TransitionEnd_Control();
    
        //Interaction_Delay_DEBUG_page
        //When Interaction_DEBUG_page_press completed delay
        //Delay for 251 ms (15 Ticks)
        interaction_Delay_DEBUG_pageCounter = INTERACTION_DELAY_DEBUG_PAGE_DURATION;
    }
}

void CONTROLViewBase::handleTickEvent()
{
    if (interaction_Delay_DRIVE_page_pressCounter > 0)
    {
        interaction_Delay_DRIVE_page_pressCounter--;
        if (interaction_Delay_DRIVE_page_pressCounter == 0)
        {
                //Interaction__Screen_DRIVE_page
                //When Interaction_Delay_DRIVE_page_press completed change screen to DRIVER
                //Go to DRIVER with no screen transition
                application().gotoDRIVERScreenNoTransition();
        }
    }

    if (interaction_Delay_SAFETY_pageCounter > 0)
    {
        interaction_Delay_SAFETY_pageCounter--;
        if (interaction_Delay_SAFETY_pageCounter == 0)
        {
                //Interaction_Screen_SAFETY_page
                //When Interaction_Delay_SAFETY_page completed change screen to SAFETY
                //Go to SAFETY with no screen transition
                application().gotoSAFETYScreenNoTransition();
        }
    }

    if (interaction_Delay_DEBUG_pageCounter > 0)
    {
        interaction_Delay_DEBUG_pageCounter--;
        if (interaction_Delay_DEBUG_pageCounter == 0)
        {
                //Interaction_Screen_DEBUG_page
                //When Interaction_Delay_DEBUG_page completed change screen to DEBUG
                //Go to DEBUG with no screen transition
                application().gotoDEBUGScreenNoTransition();
        }
    }
}

void CONTROLViewBase::transitionBegins()
{
    //Interaction_TransitionBegin
    //When screen transition begins call virtual function
    //Call TransitionBegin_Control
    TransitionBegin_Control();
}
